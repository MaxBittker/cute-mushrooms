{"version":3,"sources":["perlin.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["global","module","noise","Grad","x","y","z","this","prototype","dot2","dot3","grad3","p","perm","Array","gradP","seed","Math","floor","i","v","F2","sqrt","G2","G3","fade","t","lerp","a","b","simplex2","xin","yin","i1","j1","s","j","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","simplex3","zin","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","gi3","t3","perlin2","X","Y","n00","n01","n10","n11","u","perlin3","Z","n000","n001","n010","n011","n100","n101","n110","n111","w","pointsToString","points","map","join","random","width","window","innerWidth","height","innerHeight","Mushroom","ni","mi","start","startAngle","PI","da","n","current","step_size","abs","newx","newy","sin","cos","nextPoint","push","makeMushroom","length","headx","heady","cn","size","fill","stroke","strokeWidth","cx","cy","r","Clump","ms","_","sx","sy","App","props","maxFPS","frameCount","update","round","setState","previous","requestAnimationFrame","state","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f3002b0.chunk.js","sourcesContent":["/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\n(function(global) {\n  var module = (global.noise = {});\n\n  function Grad(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  Grad.prototype.dot2 = function(x, y) {\n    return this.x * x + this.y * y;\n  };\n\n  Grad.prototype.dot3 = function(x, y, z) {\n    return this.x * x + this.y * y + this.z * z;\n  };\n\n  var grad3 = [\n    new Grad(1, 1, 0),\n    new Grad(-1, 1, 0),\n    new Grad(1, -1, 0),\n    new Grad(-1, -1, 0),\n    new Grad(1, 0, 1),\n    new Grad(-1, 0, 1),\n    new Grad(1, 0, -1),\n    new Grad(-1, 0, -1),\n    new Grad(0, 1, 1),\n    new Grad(0, -1, 1),\n    new Grad(0, 1, -1),\n    new Grad(0, -1, -1)\n  ];\n\n  var p = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180\n  ];\n  // To remove the need for index wrapping, double the permutation table length\n  var perm = new Array(512);\n  var gradP = new Array(512);\n\n  // This isn't a very good seeding function, but it works ok. It supports 2^16\n  // different seed values. Write something better if you need more seeds.\n  module.seed = function(seed) {\n    if (seed > 0 && seed < 1) {\n      // Scale the seed out\n      seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if (seed < 256) {\n      seed |= seed << 8;\n    }\n\n    for (var i = 0; i < 256; i++) {\n      var v;\n      if (i & 1) {\n        v = p[i] ^ (seed & 255);\n      } else {\n        v = p[i] ^ ((seed >> 8) & 255);\n      }\n\n      perm[i] = perm[i + 256] = v;\n      gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n  };\n\n  module.seed(0);\n\n  /*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n\n  // Skewing and unskewing factors for 2, 3, and 4 dimensions\n  var F2 = 0.5 * (Math.sqrt(3) - 1);\n  var G2 = (3 - Math.sqrt(3)) / 6;\n\n  var F3 = 1 / 3;\n  var G3 = 1 / 6;\n\n  // 2D simplex noise\n  module.simplex2 = function(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin) * F2; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var t = (i + j) * G2;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) {\n      // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      i1 = 1;\n      j1 = 0;\n    } else {\n      // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      i1 = 0;\n      j1 = 1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n    var gi0 = gradP[i + perm[j]];\n    var gi1 = gradP[i + i1 + perm[j + j1]];\n    var gi2 = gradP[i + 1 + perm[j + 1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 < 0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 < 0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 < 0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n  };\n\n  // 3D simplex noise\n  module.simplex3 = function(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var k = Math.floor(zin + s);\n\n    var t = (i + j + k) * G3;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t;\n    var z0 = zin - k + t;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n      if (y0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      } else if (x0 >= z0) {\n        i1 = 1;\n        j1 = 0;\n        k1 = 0;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      } else {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 1;\n        j2 = 0;\n        k2 = 1;\n      }\n    } else {\n      if (y0 < z0) {\n        i1 = 0;\n        j1 = 0;\n        k1 = 1;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } else if (x0 < z0) {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 0;\n        j2 = 1;\n        k2 = 1;\n      } else {\n        i1 = 0;\n        j1 = 1;\n        k1 = 0;\n        i2 = 1;\n        j2 = 1;\n        k2 = 0;\n      }\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3;\n\n    // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n    var gi0 = gradP[i + perm[j + perm[k]]];\n    var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n    var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n    var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]];\n\n    // Calculate the contribution from the four corners\n    var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n    if (t0 < 0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n    if (t1 < 0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n    if (t2 < 0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n    if (t3 < 0) {\n      n3 = 0;\n    } else {\n      t3 *= t3;\n      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n  };\n\n  // ##### Perlin noise stuff\n\n  function fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n  }\n\n  function lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n  }\n\n  // 2D Perlin Noise\n  module.perlin2 = function(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x),\n      Y = Math.floor(y);\n    // Get relative xy coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n\n    // Calculate noise contributions from each of the four corners\n    var n00 = gradP[X + perm[Y]].dot2(x, y);\n    var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n    var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n    var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\n\n    // Compute the fade curve value for x\n    var u = fade(x);\n\n    // Interpolate the four results\n    return lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y));\n  };\n\n  // 3D Perlin Noise\n  module.perlin3 = function(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x),\n      Y = Math.floor(y),\n      Z = Math.floor(z);\n    // Get relative xyz coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    z = z - Z;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n    Z = Z & 255;\n\n    // Calculate noise contributions from each of the eight corners\n    var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n    var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n    var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n    var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n    var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n    var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n    var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n    var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(\n      x - 1,\n      y - 1,\n      z - 1\n    );\n\n    // Compute the fade curve value for x, y, z\n    var u = fade(x);\n    var v = fade(y);\n    var w = fade(z);\n\n    // Interpolate\n    return lerp(\n      lerp(lerp(n000, n100, u), lerp(n001, n101, u), w),\n      lerp(lerp(n010, n110, u), lerp(n011, n111, u), w),\n      v\n    );\n  };\n})(this);\n","function pointsToString(points) {\n  return points.map(([x, y]) => `${x},${y}`).join(\" \");\n}\n\nexport { pointsToString };\n","import React, { Fragment } from \"react\";\nimport { pointsToString } from \"./utils.js\";\nimport { noise } from \"./perlin.js\";\n// import * as Perlin2D from \"wasm-noise\";\n// console.log(Perlin2D);\nnoise.seed(Math.random());\n\n// console.log(noise);\nlet width = window.innerWidth;\nlet height = window.innerHeight;\n\nfunction makeMushroom(\n  mi,\n  t,\n  start = [width / 2, height],\n  startAngle = Math.PI\n) {\n  let a = startAngle;\n  let da = 0;\n  let n = 110 + 90 * noise.simplex2(mi * 9.112, t * 0.2);\n  n /= 5;\n\n  let points = [start];\n  let current = start;\n  let step_size = 10.0;\n\n  for (let i = 0; i < n; i++) {\n    if (n - i < 1.0) {\n      step_size *= Math.abs(n - i);\n    }\n    let newx = current[0];\n    let newy = current[1];\n\n    newx += Math.sin(a) * step_size;\n    newy += Math.cos(a) * step_size;\n\n    a += da;\n    da += noise.simplex2(0.4 + mi * 0.23, i * 6.555 + t * 0.9) * 0.02;\n    da *= 0.9;\n\n    let nextPoint = [newx, newy];\n\n    let padding = 20;\n    // if (newx < padding || newx > width - padding || newy < padding) {\n    // a = -a;\n    // break;\n    // }\n    points.push(nextPoint);\n    current = nextPoint;\n  }\n  return points;\n}\n\nfunction Mushroom({ ni, i, t, start, startAngle }) {\n  let points = makeMushroom(i, t, start, startAngle);\n  let [headx, heady] = points[points.length - 1];\n  let cn = noise.simplex2(i * 88.88, 0);\n  cn += ni - 0.5;\n  // cn *= 10;\n  if (points.length < 5) {\n    return null;\n  }\n  let size = 15 + points.length / 5;\n  return (\n    <Fragment>\n      <polyline\n        points={pointsToString(points)}\n        fill=\"none\"\n        stroke={`hsl(35, ${60 + 10 * cn}%, ${85 + 5 * cn}%)`}\n        strokeWidth={size}\n      />\n      <circle\n        cx={headx}\n        cy={heady}\n        r={size * 0.9}\n        fill={`hsl(25, ${80 + 10 * cn}%, ${80 + 5 * cn}%)`}\n      ></circle>\n    </Fragment>\n  );\n}\n\nfunction Clump({ n, t }) {\n  let ms = new Array(n).fill(\"\");\n  return (\n    <Fragment>\n      {ms.map((_, i) => {\n        let ci = i - n / 2;\n        let ni = i / n;\n        ni *= 0.25;\n        ni += 0.38;\n        let r = 100;\n        let sx = width / 2;\n        let sy = height;\n        // sx += r * Math.sin(ni * 2 * Math.PI);\n        // sy += r * Math.cos(ni * 2 * Math.PI);\n        // let startAngle = ni * 2 * Math.PI;\n        sx += (ci / n) * 260;\n        // (noise.simplex2(i * 0.88, 0) * width) / 5;\n        let startAngle = Math.PI;\n        return (\n          <Mushroom\n            i={i}\n            ni={ni}\n            t={t}\n            start={[sx, sy]}\n            startAngle={startAngle}\n          ></Mushroom>\n        );\n      })}\n    </Fragment>\n  );\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { t: 0 };\n    window.requestAnimationFrame(this.update);\n  }\n  maxFPS = 60;\n  frameCount = 0;\n  update = () => {\n    this.frameCount++;\n    if (this.frameCount >= Math.round(this.maxFPS / 24)) {\n      this.setState(previous => {\n        return {\n          t: previous.t + 1\n        };\n      });\n      this.frameCount = 0;\n    }\n    window.requestAnimationFrame(this.update);\n  };\n  render() {\n    return (\n      <div>\n        {/* <h2>{this.state.t}</h2> */}\n        <svg height={height} width={width}>\n          <Clump n={20} t={this.state.t / 60} />\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}